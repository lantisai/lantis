create type public.tweet_type as enum ('custom', 'project', 'milestone', 'step');

-- Create a table for tweets
CREATE TABLE IF NOT EXISTS tweets
(
    id bigint generated by default as identity primary key,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    updated_at timestamp with time zone,
    type tweet_type default 'custom'::tweet_type,
    content text,
    parent_id bigint references public.tweets,
    profile_id uuid references public.profiles,
    fprofile_id bigint references public.fprofiles,

    constraint exactly_one_author check (
    profile_id is null and fprofile_id is not null
 or profile_id is not null and fprofile_id is null)
);

-- Set up Row Level Security (RLS)
-- See https://supabase.com/docs/guides/auth/row-level-security for more details.
alter table tweets
  enable row level security;

create policy "Tweets are viewable by everyone." on tweets
  for select using (true);

create view tweets_full as

select
tweets.id,
tweets.created_at,
tweets.parent_id,
tweets.type,
tweets.content,
substring(tweets.content from E'(.*?)\n\n.*$') head,
tweets.replies_num,
coalesce(profiles.full_name, fprofiles.full_name) full_name,
coalesce(profiles.username, fprofiles.username) username,
coalesce(profiles.avatar_url, fprofiles.avatar_url) avatar_url
from (select tweets.*, count(replies) replies_num
     from tweets
     left join tweets replies on tweets.id = replies.parent_id
     group by tweets.id) tweets
left join profiles on tweets.profile_id = profiles.id
left join fprofiles on tweets.fprofile_id = fprofiles.id;

-- alter view tweets_full owner to authenticated;
